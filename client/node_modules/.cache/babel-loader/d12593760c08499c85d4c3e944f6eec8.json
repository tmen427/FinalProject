{"ast":null,"code":"import _classCallCheck from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tmonnie/Desktop/Crowd-Source/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tmonnie/Desktop/Crowd-Source/client/src/components/Pages/Saved.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../SavedListItem\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { Button, Modal } from 'react-bootstrap';\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\nvar Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoiZGF2aWR2bzE5OTAiLCJhIjoiY2p4MmsyOXJsMDAxYTQ4cGg3cHMwcTZkMCJ9.mHHhKy1QIfmGF_TC88vSUg\"\n});\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      venues: [],\n      show: false,\n      addressDB: \"\",\n      nameDB: \"\",\n      longitudeDB: \"\",\n      latitudeDB: \"\"\n    };\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.loadSearch = function () {\n      API.getLocationsSearch().then(function (res) {\n        _this.setState({\n          venues: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteVenue = function (id) {\n      API.deleteVenue(id).then(function (res) {\n        return _this.loadSearch();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow(address, name, longitude, latitude) {\n      this.setState({\n        show: true,\n        addressDB: address,\n        nameDB: name,\n        longitudeDB: longitude,\n        latitudeDB: latitude\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadSearch();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"xs-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, !this.state.venues.length ? React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"No Venue Display\") : React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.venues.map(function (venue) {\n        if (venue.saved === true) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(ListItem, {\n            key: venue._id,\n            name: venue.name,\n            address: venue.address,\n            category: venue.category,\n            longitude: venue.longitude,\n            latitude: venue.latitude,\n            onClick: function onClick() {\n              return _this2.deleteVenue(venue._id);\n            },\n            showMap: function showMap() {\n              return _this2.handleShow(venue.address, venue.name, venue.longitude, venue.latitude);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }));\n        }\n\n        ;\n      })))), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        dialogClassName: \"modal-90w\",\n        \"aria-labelledby\": \"modal-styling-title\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        id: \"modal-styling-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.nameDB), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Address: \", React.createElement(\"span\", {\n        id: \"notbold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.addressDB)))), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        zoom: [13],\n        center: [this.state.longitudeDB, this.state.latitudeDB],\n        containerStyle: {\n          width: '100%',\n          height: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        coordinates: [this.state.longitudeDB, this.state.latitudeDB],\n        anchor: \"bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./assets/img/marker.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Layer, {\n        type: \"symbol\",\n        layout: {\n          \"icon-image\": \"marker-15\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Feature, {\n        coordinates: [this.state.longitudeDB, this.state.latitudeDB],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/tmonnie/Desktop/Crowd-Source/client/src/components/Pages/Saved.js"],"names":["React","Component","Jumbotron","API","List","ListItem","Container","Row","Col","Button","Modal","ReactMapboxGl","Layer","Feature","Marker","Map","accessToken","Search","state","venues","show","addressDB","nameDB","longitudeDB","latitudeDB","handleShow","bind","handleClose","loadSearch","getLocationsSearch","then","res","setState","data","catch","err","console","log","deleteVenue","id","address","name","longitude","latitude","length","map","venue","saved","_id","category","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../SavedListItem\";\nimport { Container, Row, Col } from \"../Grid\";\n\nimport { Button, Modal } from 'react-bootstrap';\nimport ReactMapboxGl, { Layer, Feature, Marker } from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n    accessToken: \"pk.eyJ1IjoiZGF2aWR2bzE5OTAiLCJhIjoiY2p4MmsyOXJsMDAxYTQ4cGg3cHMwcTZkMCJ9.mHHhKy1QIfmGF_TC88vSUg\"\n});\n\n\nclass Search extends Component {\n    state = {\n        venues: [],\n        show: false,\n        addressDB: \"\",\n        nameDB: \"\",\n        longitudeDB: \"\",\n        latitudeDB: \"\",\n    };\n\n    handleShow = this.handleShow.bind(this);\n    handleClose = this.handleClose.bind(this);\n\n    handleClose() {\n        this.setState({ show: false });\n    }\n\n    handleShow(address, name, longitude, latitude) {\n        this.setState({ show: true, addressDB: address, nameDB: name, longitudeDB: longitude, latitudeDB: latitude });\n    }\n\n\n    componentDidMount() {\n        this.loadSearch();\n    }\n\n    loadSearch = () => {\n        API.getLocationsSearch()\n            .then(res => {\n                this.setState({ venues: res.data })\n            })\n            .catch(err => console.log(err));\n    };\n\n    deleteVenue = id => {\n        API.deleteVenue(id)\n          .then(res => this.loadSearch())\n          .catch(err => console.log(err));\n      };\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <Container>\n                    <Row>\n                        <Col size=\"xs-12\">\n                            {!this.state.venues.length ? (\n                                <h1 className=\"text-center\">No Venue Display</h1>\n                            ) : (\n                                    <List>\n                                        {this.state.venues.map(venue => {\n                                            if (venue.saved === true) {\n                                                return (\n                                                    <div>\n                                                    < ListItem\n                                                        key={venue._id}\n                                                        name={venue.name}\n                                                        address={venue.address}\n                                                        category={venue.category}\n                                                        longitude={venue.longitude}\n                                                        latitude={venue.latitude}\n                                                        onClick={() => this.deleteVenue(venue._id)}\n                                                        showMap={() => this.handleShow(venue.address, venue.name, venue.longitude, venue.latitude)}\n                                                    />\n                                                    {/* <button type=\"button\" className=\"btn btn-success\">Map</button> */}\n                                                    </div>\n                                                )\n                                            };\n                                        })}\n                                    </List>\n\n                                )}\n                        </Col>\n                    </Row>\n\n\n                    <Modal\n                        show={this.state.show}\n                        onHide={this.handleClose}\n                        dialogClassName=\"modal-90w\"\n                        aria-labelledby=\"modal-styling-title\"\n                        size=\"lg\"\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"modal-styling-title\">\n                                  <p>{this.state.nameDB}</p>\n                                  <p>Address: <span id=\"notbold\">{this.state.addressDB}</span></p>\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n\n                            \n                            <Map\n                                style=\"mapbox://styles/mapbox/streets-v11\"\n                                zoom={[13]}\n                                center={[this.state.longitudeDB, this.state.latitudeDB]}\n                                containerStyle={{\n                                    width: '100%',\n                                    height: '500px',\n                                }}\n                            >\n                                <Marker\n                                    coordinates={[this.state.longitudeDB, this.state.latitudeDB]}\n                                    anchor=\"bottom\">\n                                    <img src={\"./assets/img/marker.png\"} />\n                                </Marker>\n                                <Layer\n                                    type=\"symbol\"\n                                    layout={{ \"icon-image\": \"marker-15\" }}>\n                                    <Feature\n                                        coordinates={[this.state.longitudeDB, this.state.latitudeDB]}\n                                        \n                                    />\n                                </Layer>\n                            </Map>\n                            \n\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={this.handleClose}>\n                                Close\n                                </Button>\n\n                        </Modal.Footer>\n                    </Modal>\n\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}